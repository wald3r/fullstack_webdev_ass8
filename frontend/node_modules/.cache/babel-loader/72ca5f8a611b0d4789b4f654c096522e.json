{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/SetBirthyear.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nconst ALL_AUTHORS = gql(_templateObject());\n\nconst SelectAuthors = ({\n  authorSelected\n}) => React.createElement(Query, {\n  query: ALL_AUTHORS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Select name: \", React.createElement(\"select\", {\n    name: \"author\",\n    onChange: authorSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, data.allAuthors.map(author => React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    value: \"\",\n    key: author.id,\n    value: author.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, author.name))));\n});\n\nconst SetBirthyear = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        birthyear = _useState4[0],\n        setBirthyear = _useState4[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  const handleSetBirthyear = async event => {\n    event.preventDefault();\n    console.log('setting birthyear...', name, birthyear);\n    await props.setYear({\n      variables: {\n        name,\n        birthyear\n      }\n    });\n    setName('');\n    setBirthyear('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"set birthyear\"), React.createElement(\"form\", {\n    onSubmit: handleSetBirthyear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(SelectAuthors, {\n    authorSelected: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Birthyear: \", React.createElement(\"input\", {\n    value: birthyear,\n    type: \"number\",\n    onChange: ({\n      target\n    }) => setBirthyear(Number(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"set birthyear\")));\n};\n\nexport default SetBirthyear;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/SetBirthyear.js"],"names":["React","useState","gql","Query","ALL_AUTHORS","SelectAuthors","authorSelected","loading","error","data","message","allAuthors","map","author","id","name","SetBirthyear","props","setName","birthyear","setBirthyear","show","handleSetBirthyear","event","preventDefault","console","log","setYear","variables","target","value","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo'\n\nconst ALL_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    id\n  }\n}\n`\n  \nconst SelectAuthors = ({ authorSelected }) => (\n    <Query query={ALL_AUTHORS}>\n        {({ loading, error, data }) => {\n            if(loading) return 'Loading...'\n            if (error) return `Error! ${error.message}`\n            \n            return (\n                <div>\n                    Select name: <select name=\"author\" onChange={authorSelected}>\n                        {data.allAuthors.map(author => (\n                            <option selected disabled value='' key={author.id} value={author.name} >\n                                {author.name} \n                            </option>\n                        ))}\n                    </select>\n                 </div>\n            )\n      }}\n    </Query>\n)\n\nconst SetBirthyear = (props) => {\n\n\n    const [name, setName] = useState('')\n    const [birthyear, setBirthyear] = useState('')\n\n    if (!props.show) {\n        return null\n    }\n  \n\n    const handleSetBirthyear = async (event) => {\n        event.preventDefault()\n        console.log('setting birthyear...', name, birthyear)\n        await props.setYear({\n            variables: {name, birthyear}\n        })\n\n        setName('')\n        setBirthyear('')\n\n    }\n\n\n\n    return (\n        <div>\n            <br></br>\n            <h2>set birthyear</h2>\n            <form onSubmit={handleSetBirthyear}>\n            <div>\n            <SelectAuthors authorSelected={({target}) => setName(target.value)}/>\n            </div>\n            <div>\n                Birthyear: <input \n                                value={birthyear}\n                                type='number'\n                                onChange={( {target} ) => setBirthyear(Number(target.value))}\n                            />\n            </div>\n            <button type='submit'>set birthyear</button>\n            </form>\n        </div>\n    )\n\n\n\n}\n\n\nexport default SetBirthyear\n"]},"metadata":{},"sourceType":"module"}