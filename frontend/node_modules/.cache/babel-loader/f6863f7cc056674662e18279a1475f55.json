{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/Books.js\";\nimport React, { useState } from 'react';\n\nconst Books = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        filter = _useState2[0],\n        setFilter = _useState2[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (props.result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const books = props.result.data.allBooks;\n  let filteredbooks = null;\n\n  if (filter !== '') {\n    filteredbooks = books.filter(book => book.genres === filter);\n  } else {\n    filteredbooks = books;\n  }\n\n  const handleClick = e => {\n    e.preventDefault();\n    console.log(filter);\n  };\n\n  if (books === null) {\n    return null;\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"published\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"genres\")), filteredbooks.map(a => React.createElement(\"tr\", {\n      key: a.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, a.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, a.author.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, a.published), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, a.genres))))), React.createElement(\"form\", {\n      onSubmit: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, books.map(book => React.createElement(\"button\", {\n      key: book.title,\n      onClick: () => setFilter(book.genres),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, book.genres))));\n  }\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/Books.js"],"names":["React","useState","Books","props","filter","setFilter","show","result","loading","books","data","allBooks","filteredbooks","book","genres","handleClick","e","preventDefault","console","log","map","a","title","author","name","published"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,oBACKF,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAChBG,MADgB;AAAA,QACRC,SADQ;;AAIvB,MAAI,CAACF,KAAK,CAACG,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAGH,KAAK,CAACI,MAAN,CAAaC,OAAhB,EAAwB;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,QAAMC,KAAK,GAAGN,KAAK,CAACI,MAAN,CAAaG,IAAb,CAAkBC,QAAhC;AACA,MAAIC,aAAa,GAAG,IAApB;;AACA,MAAGR,MAAM,KAAK,EAAd,EAAiB;AACfQ,IAAAA,aAAa,GAAGH,KAAK,CAACL,MAAN,CAAaS,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBV,MAArC,CAAhB;AACD,GAFD,MAEK;AACHQ,IAAAA,aAAa,GAAGH,KAAhB;AACD;;AACD,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACD,GAHD;;AAKA,MAAGK,KAAK,KAAK,IAAb,EAAkB;AAChB,WAAO,IAAP;AACD,GAFD,MAEK;AACH,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF,EAaGG,aAAa,CAACQ,GAAd,CAAkBC,CAAC,IAClB;AAAI,MAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,CAAC,CAACI,SAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,CAAC,CAACP,MAAP,CAJF,CADD,CAbH,CADF,CAHF,EA2BE;AAAM,MAAA,QAAQ,EAAEC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,KAAK,CAACW,GAAN,CAAUP,IAAI,IACb;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACS,KAAlB;AAAyB,MAAA,OAAO,EAAE,MAAMjB,SAAS,CAACQ,IAAI,CAACC,MAAN,CAAjD;AAAgE,MAAA,IAAI,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+ED,IAAI,CAACC,MAApF,CADD,CADH,CA3BF,CADF;AAmCD;AACF,CA9DD;;AAgEA,eAAeZ,KAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Books = (props) => {\n  const [filter, setFilter] = useState('')\n\n\n  if (!props.show) {\n    return null\n  }\n\n  if(props.result.loading){\n    return <div>loading...</div>\n  }\n  const books = props.result.data.allBooks\n  let filteredbooks = null\n  if(filter !== ''){\n    filteredbooks = books.filter(book => book.genres === filter)\n  }else{\n    filteredbooks = books\n  }\n  const handleClick = (e) => {\n    e.preventDefault()\n    console.log(filter)\n  }\n\n  if(books === null){\n    return null\n  }else{\n    return (\n      <div>\n        <h2>books</h2>\n\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>\n                author\n              </th>\n              <th>\n                published\n              </th>\n              <th>\n                genres\n              </th>\n            </tr>\n            {filteredbooks.map(a =>\n              <tr key={a.title}>\n                <td>{a.title}</td>\n                <td>{a.author.name}</td>\n                <td>{a.published}</td>\n                <td>{a.genres}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <form onSubmit={handleClick}>\n          {books.map(book => \n            <button key={book.title} onClick={() => setFilter(book.genres)} type='submit'>{book.genres}</button>)\n          }\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}