{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    allAuthors {\\n      name,\\n      born,\\n      bookCount\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql } from 'apollo-boost';\nconst query = gql(_templateObject());\n\nconst App = ({\n  client\n}) => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  client.query({\n    query\n  }).then(response => {\n    console.log(response.data);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"add book\")), React.createElement(Authors, {\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","gql","query","App","client","page","setPage","then","response","console","log","data"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,KAAK,GAAGD,GAAH,mBAAX;;AAUA,MAAME,GAAG,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAkB;AAAA,oBACJP,QAAQ,CAAC,SAAD,CADJ;AAAA;AAAA,QACrBQ,IADqB;AAAA,QACfC,OADe;;AAG5BF,EAAAA,MAAM,CAACF,KAAP,CAAa;AAAEA,IAAAA;AAAF,GAAb,EACCK,IADD,CACOC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,GAHD;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAML,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,EAOE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAED,IAAI,KAAK,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAWE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAeE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAsBD,CA/BD;;AAiCA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql } from 'apollo-boost'\n\nconst query = gql`\n  {\n    allAuthors {\n      name,\n      born,\n      bookCount\n      id\n    }\n  }\n`\nconst App = ( { client } ) => {\n  const [page, setPage] = useState('authors')\n\n  client.query({ query })\n  .then((response) => {\n    console.log(response.data)\n  })\n\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n\n      <Authors\n        show={page === 'authors'}\n      />\n\n      <Books\n        show={page === 'books'}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}