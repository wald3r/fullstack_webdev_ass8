{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allBooks {\\n    title,\\n    author,\\n    published,\\n  }\\n}\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    bookCount,\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation newBook($title: String!, $author: String!, $published: Int!, $genres: [String!]){\\n     addBook(\\n      title: $title,\\n      author: $author,\\n      published: $published,\\n      genres: $genres\\n      ){\\n        title\\n        author\\n        published\\n        genres\\n      }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql } from 'apollo-boost';\nimport { Query, Mutation, ApolloConsumer } from 'react-apollo';\nconst NEW_BOOK = gql(_templateObject());\nconst ALL_AUTHORS = gql(_templateObject2());\nconst ALL_BOOKS = gql(_templateObject3());\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"add book\")), React.createElement(ApolloConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, client => React.createElement(Query, {\n    query: ALL_AUTHORS,\n    pollInterval: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, result => React.createElement(Authors, {\n    show: page === 'authors',\n    result: result,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), \"}\")), React.createElement(ApolloConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, client => React.createElement(Query, {\n    query: ALL_BOOKS,\n    pollInterval: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, result => React.createElement(Books, {\n    show: page === 'books',\n    result: result,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), \"}\")), React.createElement(Mutation, {\n    mutation: NEW_BOOK,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, addBook => React.createElement(NewBook, {\n    show: page === 'add',\n    addBook: addBook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","gql","Query","Mutation","ApolloConsumer","NEW_BOOK","ALL_AUTHORS","ALL_BOOKS","App","page","setPage","client","result","addBook"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,cAA1B,QAAgD,cAAhD;AAEA,MAAMC,QAAQ,GAAGJ,GAAH,mBAAd;AAgBA,MAAMK,WAAW,GAAGL,GAAH,oBAAjB;AAWA,MAAMM,SAAS,GAAGN,GAAH,oBAAf;;AAUA,MAAMO,GAAG,GAAG,MAAM;AAAA,oBACQX,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,QACTY,IADS;AAAA,QACHC,OADG;;AAEf,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,EAMI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,MAAD,IACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,WAAd;AAA2B,IAAA,YAAY,EAAE,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIM,MAAD,IACC,oBAAC,OAAD;AACA,IAAA,IAAI,EAAEH,IAAI,KAAK,SADf;AAC0B,IAAA,MAAM,EAAEG,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,MAFJ,CANJ,EAiBI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,MAAD,IACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,SAAd;AAAyB,IAAA,YAAY,EAAE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,MAAD,IACC,oBAAC,KAAD;AACA,IAAA,IAAI,EAAEH,IAAI,KAAK,OADf;AACwB,IAAA,MAAM,EAAEG,MADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,MAFJ,CAjBJ,EA4BI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEP,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIQ,OAAD,IACC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAI,KAAI,KAAvB;AAA8B,IAAA,OAAO,EAAEI,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA5BJ,CADD;AAqCF,CAvCD;;AAyCA,eAAeL,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql } from 'apollo-boost'\nimport { Query, Mutation, ApolloConsumer } from 'react-apollo'\n\nconst NEW_BOOK = gql`\n  mutation newBook($title: String!, $author: String!, $published: Int!, $genres: [String!]){\n     addBook(\n      title: $title,\n      author: $author,\n      published: $published,\n      genres: $genres\n      ){\n        title\n        author\n        published\n        genres\n      }\n}`\n\n\nconst ALL_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    bookCount,\n    id\n  }\n}\n`\n\nconst ALL_BOOKS = gql`\n{\n  allBooks {\n    title,\n    author,\n    published,\n  }\n}\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n   return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n        <ApolloConsumer>\n          {(client) => \n            <Query query={ALL_AUTHORS} pollInterval={2000}>\n              {(result) =>\n                <Authors\n                show={page === 'authors'} result={result}\n              />}\n              }\n            </Query> \n          }\n        </ApolloConsumer>\n        <ApolloConsumer>\n          {(client) => \n            <Query query={ALL_BOOKS} pollInterval={2000}>\n              {(result) =>\n                <Books\n                show={page === 'books'} result={result}\n              />}\n              }\n            </Query> \n          }\n        </ApolloConsumer>\n        <Mutation mutation={NEW_BOOK}>\n          {(addBook) => \n            <NewBook show={page ==='add'} addBook={addBook} />\n          }\n        </Mutation>\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}