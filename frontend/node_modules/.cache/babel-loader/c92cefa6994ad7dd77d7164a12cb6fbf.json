{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/NewBook.js\";\nimport React, { useState } from 'react';\n\nconst NewBook = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuhtor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        published = _useState6[0],\n        setPublished = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        genre = _useState8[0],\n        setGenre = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        genres = _useState10[0],\n        setGenres = _useState10[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async e => {\n    e.preventDefault();\n    await props.addBook({\n      variables: {\n        title,\n        author,\n        published,\n        genres\n      }\n    });\n    console.log('add book...');\n    setTitle('');\n    setPublished('');\n    setAuhtor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => setAuhtor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"published\", React.createElement(\"input\", {\n    type: \"Number\",\n    value: published,\n    onChange: ({\n      target\n    }) => setPublished(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: genre,\n    onChange: ({\n      target\n    }) => setGenre(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addGenre,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"add genre\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"genres: \", genres.join(' ')), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"create book\")));\n};\n\nexport default NewBook;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/NewBook.js"],"names":["React","useState","NewBook","props","title","setTitle","author","setAuhtor","published","setPublished","genre","setGenre","genres","setGenres","show","submit","e","preventDefault","addBook","variables","console","log","addGenre","concat","target","value","join"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuhtor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (e) => {\n    e.preventDefault()\n    await props.addBook({\n      variables: {title, author, published, genres}\n    })\n    console.log('add book...')\n\n    setTitle('')\n    setPublished('')\n    setAuhtor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuhtor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type='Number'\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">add genre</button>\n        </div>\n        <div>\n          genres: {genres.join(' ')}\n        </div>\n        <button type='submit'>create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook"]},"metadata":{},"sourceType":"module"}