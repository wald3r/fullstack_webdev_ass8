{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/SetBirthyear.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    bookCount,\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { gql } from 'apollo-boost';\nimport { Query, Mutation } from 'react-apollo';\nconst ALL_AUTHORS = gql(_templateObject());\n\nconst SelectAuthors = ({\n  authorSelected\n}) => React.createElement(Query, {\n  query: ALL_AUTHORS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n  return React.createElement(\"select\", {\n    name: \"author\",\n    onChange: authorSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, data.allAuthors.map(author => React.createElement(\"option\", {\n    key: author.id,\n    value: author.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n});\n\nconst SetBirthyear = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        birthyear = _useState4[0],\n        setBirthyear = _useState4[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  const options = props.authors.map(author => ({\n    value: author.title,\n    label: author.title\n  }));\n\n  const handleChange = name => {\n    console.log(\"option selected: \", name);\n    setName(name);\n  };\n\n  const handleSetBirthyear = async event => {\n    event.preventDefault();\n    console.log('setting birthyear...');\n    await props.setYear({\n      variables: {\n        name,\n        birthyear\n      }\n    });\n    setName('');\n    setBirthyear('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"set birthyear\"), React.createElement(\"form\", {\n    onSubmit: handleSetBirthyear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(SelectAuthors, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Birthyear: \", React.createElement(\"input\", {\n    value: birthyear,\n    type: \"number\",\n    onChange: ({\n      target\n    }) => setBirthyear(Number(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"set birthyear\")));\n};\n\nexport default SetBirthyear;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/SetBirthyear.js"],"names":["React","useState","Select","gql","Query","Mutation","ALL_AUTHORS","SelectAuthors","authorSelected","loading","error","data","message","allAuthors","map","author","id","name","SetBirthyear","props","setName","birthyear","setBirthyear","show","options","authors","value","title","label","handleChange","console","log","handleSetBirthyear","event","preventDefault","setYear","variables","target","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Select from 'react-select'\nimport { gql } from 'apollo-boost'\nimport { Query, Mutation } from 'react-apollo'\n\nconst ALL_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    bookCount,\n    id\n  }\n}\n`\n  \nconst SelectAuthors = ({ authorSelected }) => (\n    <Query query={ALL_AUTHORS}>\n        {({ loading, error, data }) => {\n\n            if(loading) return 'Loading...'\n            if (error) return `Error! ${error.message}`\n            \n            return (\n                <select name=\"author\" onChange={authorSelected}>\n                    {data.allAuthors.map(author => (\n                        <option key={author.id} value={author.name}> \n                        </option>\n                    ))}\n                 </select>\n            )\n      }}\n    </Query>\n)\n\nconst SetBirthyear = (props) => {\n\n\n    const [name, setName] = useState('')\n    const [birthyear, setBirthyear] = useState('')\n\n    if (!props.show) {\n        return null\n    }\n\n    const options = props.authors.map(author => ({value: author.title, label: author.title}))\n  \n\n    const handleChange = (name) => {\n       console.log(\"option selected: \", name)\n       setName(name)\n\n    }\n\n    const handleSetBirthyear = async (event) => {\n        event.preventDefault()\n        console.log('setting birthyear...')\n        await props.setYear({\n            variables: {name, birthyear}\n        })\n\n        setName('')\n        setBirthyear('')\n\n    }\n\n\n\n    return (\n        <div>\n            <br></br>\n            <h2>set birthyear</h2>\n            <form onSubmit={handleSetBirthyear}>\n            <div>\n            <SelectAuthors />\n            </div>\n            <div>\n                Birthyear: <input \n                                value={birthyear}\n                                type='number'\n                                onChange={( {target} ) => setBirthyear(Number(target.value))}\n                            />\n            </div>\n            <button type='submit'>set birthyear</button>\n            </form>\n        </div>\n    )\n\n\n\n}\n\n\nexport default SetBirthyear\n"]},"metadata":{},"sourceType":"module"}