{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password)  {\\n      value\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allBooks {\\n    title,\\n    published,\\n  }\\n}\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  mutation setBirthyear($name: String!, $birthyear: Int!){\\n      editAuthor(\\n        name: $name,\\n        setBornTo: $birthyear\\n      ){\\n        name\\n        born\\n      }\\n  }\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation newBook($title: String!, $author: String!, $published: Int!, $genres: [String!]){\\n     addBook(\\n      title: $title,\\n      author: $author,\\n      published: $published,\\n      genres: $genres\\n      ){\\n        title\\n        published\\n        genres\\n      }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport SetBirthyear from './components/SetBirthyear';\nimport ApolloClient from 'apollo-boost';\nimport { gql } from 'apollo-boost';\nimport { Query, useMutation, Mutation, useApolloClient } from 'react-apollo';\nimport LoginForm from './components/LoginForm';\nconst NEW_BOOK = gql(_templateObject());\nconst NEW_BIRTHYEAR = gql(_templateObject2());\nconst ALL_AUTHORS = gql(_templateObject3());\nconst ALL_BOOKS = gql(_templateObject4());\nconst LOGIN = gql(_templateObject5());\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        token = _useState4[0],\n        setToken = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  const handleError = error => {\n    setErrorMessage(error.graphQLErrors[0].message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const _useMutation = useMutation(LOGIN, {\n    onError: handleError\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  const client = useApolloClient();\n  /*const useEffect = () => {\n    localStorage.removeItem('whatsoever-user-token')\n  }*/\n\n  const errorNotification = () => errorMessage && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, errorMessage);\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  if (token === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, errorNotification(), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginForm, {\n      login: login,\n      setToken: token => setToken(token),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, errorMessage && React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, errorMessage), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => setPage('authors'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"authors\"), React.createElement(\"button\", {\n      onClick: () => setPage('books'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"button\", {\n      onClick: () => setPage('add'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"add book\"), React.createElement(\"button\", {\n      onClick: () => setPage('set'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"set birthyear\"), React.createElement(\"button\", {\n      onClick: logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"logout\")), React.createElement(Query, {\n      query: ALL_AUTHORS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, result => React.createElement(Authors, {\n      show: page === 'authors',\n      result: result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(Query, {\n      query: ALL_BOOKS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, result => React.createElement(Books, {\n      show: page === 'books',\n      result: result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(Mutation, {\n      mutation: NEW_BOOK,\n      refetchQueries: [{\n        query: ALL_BOOKS\n      }, {\n        query: ALL_AUTHORS\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, addBook => React.createElement(NewBook, {\n      show: page === 'add',\n      addBook: addBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Mutation, {\n      mutation: NEW_BIRTHYEAR,\n      refetchQueries: [{\n        query: ALL_BOOKS\n      }, {\n        query: ALL_AUTHORS\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, setYear => React.createElement(SetBirthyear, {\n      show: page === 'set',\n      setYear: setYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js"],"names":["React","useState","useEffect","Authors","Books","NewBook","SetBirthyear","ApolloClient","gql","Query","useMutation","Mutation","useApolloClient","LoginForm","NEW_BOOK","NEW_BIRTHYEAR","ALL_AUTHORS","ALL_BOOKS","LOGIN","App","page","setPage","token","setToken","errorMessage","setErrorMessage","handleError","error","graphQLErrors","message","setTimeout","onError","login","client","errorNotification","color","logout","localStorage","clear","resetStore","result","query","addBook","setYear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport SetBirthyear from './components/SetBirthyear'\nimport ApolloClient from 'apollo-boost'\nimport { gql } from 'apollo-boost'\nimport { Query, useMutation, Mutation, useApolloClient } from 'react-apollo'\nimport LoginForm from './components/LoginForm'\n\n\n\n\nconst NEW_BOOK = gql`\n  mutation newBook($title: String!, $author: String!, $published: Int!, $genres: [String!]){\n     addBook(\n      title: $title,\n      author: $author,\n      published: $published,\n      genres: $genres\n      ){\n        title\n        published\n        genres\n      }\n}`\n\n\nconst NEW_BIRTHYEAR = gql `\n\n  mutation setBirthyear($name: String!, $birthyear: Int!){\n      editAuthor(\n        name: $name,\n        setBornTo: $birthyear\n      ){\n        name\n        born\n      }\n  }`\n\nconst ALL_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    id\n  }\n}\n`\n\nconst ALL_BOOKS = gql`\n{\n  allBooks {\n    title,\n    published,\n  }\n}\n`\n\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const [token, setToken] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleError = (error) => {\n    setErrorMessage(error.graphQLErrors[0].message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 10000)\n  }\n\n\n  const [login] = useMutation(LOGIN, {\n    onError: handleError\n  })\n\n  const client = useApolloClient()\n\n  /*const useEffect = () => {\n    localStorage.removeItem('whatsoever-user-token')\n  }*/\n\n  const errorNotification = () => errorMessage &&\n    <div style={{ color: 'red' }}>\n      {errorMessage}\n    </div>\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n   if(token === null){\n    return (\n      <div>\n        {errorNotification()}\n        <h2>Login</h2>\n        <LoginForm\n          login={login}\n          setToken={(token) => setToken(token)}\n        />\n      </div>\n    )\n   }else{\n    return (\n      <div>\n        {errorMessage &&\n        <div style={{ color: 'red' }}>\n          {errorMessage}\n        </div>\n      }\n        <div>\n          <button onClick={() => setPage('authors')}>authors</button>\n          <button onClick={() => setPage('books')}>books</button>\n          <button onClick={() => setPage('add')}>add book</button>\n          <button onClick={() => setPage('set')}>set birthyear</button>\n          <button onClick={logout}>logout</button>\n        </div>\n  \n        <Query query={ALL_AUTHORS}>\n          {(result) => \n            <Authors\n              show={page === 'authors'} result={result} \n            />}\n        </Query>\n  \n        <Query query={ALL_BOOKS}>\n          {(result) => \n            <Books\n              show={page === 'books'} result={result}\n            />}\n        </Query>\n        <Mutation \n          mutation={NEW_BOOK}\n          refetchQueries={[{query: ALL_BOOKS},{query: ALL_AUTHORS}]}>\n          {(addBook) => \n            <NewBook show={page ==='add'} addBook={addBook} />\n          }\n        </Mutation>\n        <Mutation \n          mutation={NEW_BIRTHYEAR}\n          refetchQueries={[{query: ALL_BOOKS},{query: ALL_AUTHORS}]}>\n          {(setYear) => \n             <SetBirthyear show={page ==='set'} setYear={setYear}/> }      \n        </Mutation>\n      </div>\n    )\n   }\n   \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}