{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/SetBirthyear.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nconst SetBirthyear = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        birthyear = _useState4[0],\n        setBirthyear = _useState4[1];\n\n  state = {\n    selectedOption: null\n  };\n\n  if (!props.show) {\n    return null;\n  }\n\n  const handleSetBirthyear = async event => {\n    event.preventDefault();\n    console.log('setting birthyear...');\n    await props.setYear({\n      variables: {\n        name,\n        birthyear\n      }\n    });\n    setName('');\n    setBirthyear('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"set birthyear\"), React.createElement(\"form\", {\n    onSubmit: handleSetBirthyear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Birthyear: \", React.createElement(\"input\", {\n    value: birthyear,\n    type: \"number\",\n    onChange: ({\n      target\n    }) => setBirthyear(Number(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"set birthyear\")));\n};\n\nexport default SetBirthyear;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(\"Option selected:\", selectedOption);\n    };\n  }\n\n  render() {\n    const selectedOption = this.state.selectedOption;\n    return React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/SetBirthyear.js"],"names":["React","useState","Select","options","value","label","SetBirthyear","props","name","setName","birthyear","setBirthyear","state","selectedOption","show","handleSetBirthyear","event","preventDefault","console","log","setYear","variables","target","Number","App","Component","handleChange","setState","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Select from 'react-select'\n\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n];\n  \n\nconst SetBirthyear = (props) => {\n\n\n    const [name, setName] = useState('')\n    const [birthyear, setBirthyear] = useState('')\n\n    state = {\n        selectedOption: null,\n      };\n\n    if (!props.show) {\n        return null\n    }\n\n   \n\n    const handleSetBirthyear = async (event) => {\n        event.preventDefault()\n        console.log('setting birthyear...')\n        await props.setYear({\n            variables: {name, birthyear}\n        })\n\n        setName('')\n        setBirthyear('')\n\n    }\n\n\n\n    return (\n        <div>\n            <br></br>\n            <h2>set birthyear</h2>\n            <form onSubmit={handleSetBirthyear}>\n                <div>\n                    Name: <input value={name}\n                                 onChange={({ target }) => setName(target.value) }          \n                          />\n                </div>\n\n                <div>\n                    Birthyear: <input \n                                    value={birthyear}\n                                    type='number'\n                                    onChange={( {target} ) => setBirthyear(Number(target.value))}\n                               />\n                </div>\n                <button type='submit'>set birthyear</button>\n            </form>\n        </div>\n    )\n\n\n\n}\n\n\nexport default SetBirthyear\n\n  \n  class App extends React.Component {\n    state = {\n      selectedOption: null,\n    };\n    handleChange = selectedOption => {\n      this.setState({ selectedOption });\n      console.log(`Option selected:`, selectedOption);\n    };\n    render() {\n      const { selectedOption } = this.state;\n  \n      return (\n        <Select\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={options}\n        />\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}