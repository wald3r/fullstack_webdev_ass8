{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/Books.js\";\nimport React, { useState } from 'react';\n\nconst Books = props => {\n  const _useState = useState('RESET'),\n        _useState2 = _slicedToArray(_useState, 2),\n        filter = _useState2[0],\n        setFilter = _useState2[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (props.result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const books = props.result.data.allBooks;\n  let filteredbooks = null;\n\n  if (filter !== 'RESET') {\n    filteredbooks = books.filter(book => {\n      const list = book.genres[0].split(', ');\n      const variable = list.indexOf(filter);\n\n      if (variable > -1) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  } else {\n    filteredbooks = books;\n  }\n\n  const list = () => {\n    const set = new Set();\n    books.map(book => {\n      const list = book.genres[0].split(', ');\n\n      for (let x = 0; x < list.length; x++) {\n        set.add(list[x]);\n      }\n\n      return book;\n    });\n    return set;\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    console.log(filter);\n  };\n\n  if (books === null) {\n    return null;\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"published\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"genres\")), filteredbooks.map(a => React.createElement(\"tr\", {\n      key: a.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, a.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, a.author.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, a.published), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, a.genres))))), React.createElement(\"form\", {\n      onSubmit: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, [...list()].map((book, x) => React.createElement(\"button\", {\n      key: x,\n      onClick: () => setFilter(book),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, book)), React.createElement(\"button\", {\n      onClick: () => setFilter('RESET'),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"RESET\")));\n  }\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/Books.js"],"names":["React","useState","Books","props","filter","setFilter","show","result","loading","books","data","allBooks","filteredbooks","book","list","genres","split","variable","indexOf","set","Set","map","x","length","add","handleClick","e","preventDefault","console","log","a","title","author","name","published"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Books = (props) => {\n  const [filter, setFilter] = useState('RESET')\n\n\n  if (!props.show) {\n    return null\n  }\n\n  if(props.result.loading){\n    return <div>loading...</div>\n  }\n  const books = props.result.data.allBooks\n  let filteredbooks = null\n  if(filter !== 'RESET'){\n    filteredbooks = books.filter(book => {\n      const list = book.genres[0].split(', ')\n      const variable = list.indexOf(filter)\n      if(variable > -1){\n        return true\n      }\n      else{\n        return false\n      }\n    })\n  }else{\n    filteredbooks = books\n  }\n\n\n  const list = () => {\n    const set = new Set()\n    books.map(book => {\n      const list = book.genres[0].split(', ')\n      for(let x = 0; x < list.length; x++ ){\n        set.add(list[x])\n      }\n      return book\n    })\n    return set\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    console.log(filter)\n  }\n\n  if(books === null){\n    return null\n  }else{\n    return (\n      <div>\n        <h2>books</h2>\n\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>\n                author\n              </th>\n              <th>\n                published\n              </th>\n              <th>\n                genres\n              </th>\n            </tr>\n            {filteredbooks.map(a =>\n              <tr key={a.title}>\n                <td>{a.title}</td>\n                <td>{a.author.name}</td>\n                <td>{a.published}</td>\n                <td>{a.genres}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <form onSubmit={handleClick}>\n          {[...list()].map((book, x) => \n            <button key={x} onClick={() => setFilter(book)} type='submit'>{book}</button>)\n          }\n          <button onClick={() => setFilter('RESET')} type='submit'>RESET</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}