{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allBooks {\\n    title,\\n    author,\\n    published,\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    bookCount,\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nconst ALL_AUTHORS = gql(_templateObject());\nconst ALL_BOOKS = gql(_templateObject2());\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"add book\")), React.createElement(Query, {\n    query: ALL_AUTHORS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, result => React.createElement(Authors, {\n    show: page === 'authors',\n    result: result,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Query, {\n    query: ALL_BOOKS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, result => React.createElement(Books, {\n    show: page === 'books',\n    result: result,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","gql","Query","ALL_AUTHORS","ALL_BOOKS","App","page","setPage","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,WAAW,GAAGF,GAAH,mBAAjB;AAWA,MAAMG,SAAS,GAAGH,GAAH,oBAAf;;AAUA,MAAMI,GAAG,GAAG,MAAM;AAAA,oBACQR,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,QACTS,IADS;AAAA,QACHC,OADG;;AAEf,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,EAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,MAAD,IACC,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEF,IAAI,KAAK,SADjB;AAC4B,IAAA,MAAM,EAAEE,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPF,EAcE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACII,MAAD,IACC,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEF,IAAI,KAAK,OADjB;AAC0B,IAAA,MAAM,EAAEE,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAdF,EAqBE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEF,IAAI,KAAK,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADD;AA4BF,CA9BD;;AAgCA,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo'\n\nconst ALL_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    bookCount,\n    id\n  }\n}\n`\n\nconst ALL_BOOKS = gql`\n{\n  allBooks {\n    title,\n    author,\n    published,\n  }\n}\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n   return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n\n      <Query query={ALL_AUTHORS}>\n        {(result) => \n          <Authors\n            show={page === 'authors'} result={result}\n          />}\n      </Query>\n\n      <Query query={ALL_BOOKS}>\n        {(result) => \n          <Books\n            show={page === 'books'} result={result}\n          />}\n      </Query>\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}