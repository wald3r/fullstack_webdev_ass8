{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    bookCount\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nconst All_AUTHORS = gql(_templateObject());\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n  /*\n    return (\n      <div>\n        <div>\n          <button onClick={() => setPage('authors')}>authors</button>\n          <button onClick={() => setPage('books')}>books</button>\n          <button onClick={() => setPage('add')}>add book</button>\n        </div>\n  \n        <Authors\n          show={page === 'authors'}\n        />\n  \n        <Books\n          show={page === 'books'}\n        />\n  \n        <NewBook\n          show={page === 'add'}\n        />\n  \n      </div>\n    )*/\n\n\n  return React.createElement(Query, {\n    query: All_AUTHORS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, result => {\n    if (result.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, result.data.allAuthors.map(p => console.log(p.name)));\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","gql","Query","All_AUTHORS","App","page","setPage","result","loading","data","allAuthors","map","p","console","log","name"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,WAAW,GAAGF,GAAH,mBAAjB;;AAWA,MAAMG,GAAG,GAAG,MAAM;AAAA,oBACQP,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,QACTQ,IADS;AAAA,QACHC,OADG;AAElB;;;;;;;;;;;;;;;;;;;;;;;;;AAuBE,SAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHI,MAAD,IAAY;AAAC,QAAIA,MAAM,CAACC,OAAX,EAAoB;AAChC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,MAAM,CAACE,IAAP,CAAYC,UAAZ,CAAuBC,GAAvB,CAA2BC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAd,CAAhC,CADH,CADF;AAIC,GARI,CAAP;AAUD,CAnCD;;AAqCA,eAAeX,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo'\n\nconst All_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    bookCount\n    id\n  }\n}\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n/*\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n\n      <Authors\n        show={page === 'authors'}\n      />\n\n      <Books\n        show={page === 'books'}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )*/\n  return <Query query={All_AUTHORS}>\n    {(result) => {if (result.loading) {\n      return <div>loading...</div>\n    }\n    return (\n      <div>\n        {result.data.allAuthors.map(p => console.log(p.name))}\n      </div>)\n    }}\n  </Query>\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}