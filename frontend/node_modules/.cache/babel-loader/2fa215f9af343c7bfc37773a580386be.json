{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/Books.js\";\nimport React, { useState } from 'react';\n\nconst Books = props => {\n  const _useState = useState('RESET'),\n        _useState2 = _slicedToArray(_useState, 2),\n        filter = _useState2[0],\n        setFilter = _useState2[1];\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (props.result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const books = props.result.data.allBooks;\n  let filteredbooks = null;\n\n  if (filter !== 'RESET') {\n    filteredbooks = books.filter(book => book.genres === filter);\n  } else {\n    filteredbooks = books;\n  }\n\n  const set = new Set();\n  let genreList = books.map(book => {\n    const genrelist = book.genres[0].split(', ');\n    const list = [];\n\n    for (let x = 0; x < genrelist.length; x++) {\n      if (!set.has(genrelist[x])) {\n        console.log(list);\n        set.add(genrelist[x]);\n        list.push(genrelist[x]);\n      }\n    }\n\n    return list;\n  });\n  genreList.push('RESET');\n\n  const handleClick = e => {\n    e.preventDefault();\n    console.log(filter);\n  };\n\n  if (books === null) {\n    return null;\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"published\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"genres\")), filteredbooks.map(a => React.createElement(\"tr\", {\n      key: a.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, a.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, a.author.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, a.published), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, a.genres))))), React.createElement(\"form\", {\n      onSubmit: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, genreList.map((genre, x) => React.createElement(\"button\", {\n      key: x,\n      onClick: () => setFilter(genre),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, genre))));\n  }\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/components/Books.js"],"names":["React","useState","Books","props","filter","setFilter","show","result","loading","books","data","allBooks","filteredbooks","book","genres","set","Set","genreList","map","genrelist","split","list","x","length","has","console","log","add","push","handleClick","e","preventDefault","a","title","author","name","published","genre"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Books = (props) => {\n  const [filter, setFilter] = useState('RESET')\n\n\n  if (!props.show) {\n    return null\n  }\n\n  if(props.result.loading){\n    return <div>loading...</div>\n  }\n  const books = props.result.data.allBooks\n  let filteredbooks = null\n  if(filter !== 'RESET'){\n    filteredbooks = books.filter(book => book.genres === filter)\n  }else{\n    filteredbooks = books\n  }\n  const set = new Set()\n  let genreList = books.map(book => {\n    const genrelist = book.genres[0].split(', ')\n    const list = []\n    for (let x = 0; x < genrelist.length; x++){\n      if(!set.has(genrelist[x])){\n        console.log(list)\n        set.add(genrelist[x])\n        list.push(genrelist[x])\n      }\n    }\n    return list\n  })\n  genreList.push('RESET')\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    console.log(filter)\n  }\n\n  if(books === null){\n    return null\n  }else{\n    return (\n      <div>\n        <h2>books</h2>\n\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>\n                author\n              </th>\n              <th>\n                published\n              </th>\n              <th>\n                genres\n              </th>\n            </tr>\n            {filteredbooks.map(a =>\n              <tr key={a.title}>\n                <td>{a.title}</td>\n                <td>{a.author.name}</td>\n                <td>{a.published}</td>\n                <td>{a.genres}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <form onSubmit={handleClick}>\n          {genreList.map((genre, x) => \n            <button key={x} onClick={() => setFilter(genre)} type='submit'>{genre}</button>)\n          }\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}