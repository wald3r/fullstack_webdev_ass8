{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  subscription {\\n    bookAdded {\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password)  {\\n      value\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allBooks {\\n    title,\\n    published,\\n    genres,\\n    author{\\n      id,\\n      name\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allAuthors {\\n    name,\\n    born,\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  mutation setBirthyear($name: String!, $birthyear: Int!){\\n      editAuthor(\\n        name: $name,\\n        setBornTo: $birthyear\\n      ){\\n        name\\n        born\\n      }\\n  }\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation newBook($title: String!, $author: String!, $published: Int!, $genres: [String!]){\\n     addBook(\\n      title: $title,\\n      author: $author,\\n      published: $published,\\n      genres: $genres\\n      ){\\n        title\\n        published\\n        genres\\n      }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport SetBirthyear from './components/SetBirthyear';\nimport { gql } from 'apollo-boost';\nimport { useMutation, useSubscription, useApolloClient } from '@apollo/react-hooks';\nimport { Query, Mutation } from 'react-apollo';\nimport LoginForm from './components/LoginForm';\nconst NEW_BOOK = gql(_templateObject());\nconst NEW_BIRTHYEAR = gql(_templateObject2());\nconst ALL_AUTHORS = gql(_templateObject3());\nconst ALL_BOOKS = gql(_templateObject4());\nconst LOGIN = gql(_templateObject5());\nconst BOOK_ADDED = gql(_templateObject6());\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        token = _useState4[0],\n        setToken = _useState4[1];\n\n  const _useMutation = useMutation(LOGIN),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  const client = useApolloClient();\n  useSubscription(PERSON_ADDED, {\n    onSubscriptionData: ({\n      subscriptionData\n    }) => {\n      console.log(subscriptionData);\n    }\n  });\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  if (token === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginForm, {\n      login: login,\n      setToken: token => setToken(token),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => setPage('authors'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"authors\"), React.createElement(\"button\", {\n      onClick: () => setPage('books'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"button\", {\n      onClick: () => setPage('add'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"add book\"), React.createElement(\"button\", {\n      onClick: () => setPage('set'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"set birthyear\"), React.createElement(\"button\", {\n      onClick: logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"logout\")), React.createElement(Query, {\n      query: ALL_AUTHORS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, result => React.createElement(Authors, {\n      show: page === 'authors',\n      result: result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(Query, {\n      query: ALL_BOOKS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, result => React.createElement(Books, {\n      show: page === 'books',\n      result: result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Mutation, {\n      mutation: NEW_BOOK,\n      refetchQueries: [{\n        query: ALL_BOOKS\n      }, {\n        query: ALL_AUTHORS\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, addBook => React.createElement(NewBook, {\n      show: page === 'add',\n      addBook: addBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(Mutation, {\n      mutation: NEW_BIRTHYEAR,\n      refetchQueries: [{\n        query: ALL_BOOKS\n      }, {\n        query: ALL_AUTHORS\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, setYear => React.createElement(SetBirthyear, {\n      show: page === 'set',\n      setYear: setYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass8/frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","SetBirthyear","gql","useMutation","useSubscription","useApolloClient","Query","Mutation","LoginForm","NEW_BOOK","NEW_BIRTHYEAR","ALL_AUTHORS","ALL_BOOKS","LOGIN","BOOK_ADDED","App","page","setPage","token","setToken","login","client","PERSON_ADDED","onSubscriptionData","subscriptionData","console","log","logout","localStorage","clear","resetStore","result","query","addBook","setYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,qBAA9D;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAKA,MAAMC,QAAQ,GAAGP,GAAH,mBAAd;AAeA,MAAMQ,aAAa,GAAGR,GAAH,oBAAnB;AAYA,MAAMS,WAAW,GAAGT,GAAH,oBAAjB;AAUA,MAAMU,SAAS,GAAGV,GAAH,oBAAf;AAcA,MAAMW,KAAK,GAAGX,GAAH,oBAAX;AAQA,MAAMY,UAAU,GAAGZ,GAAH,oBAAhB;;AAQA,MAAMa,GAAG,GAAG,MAAM;AAAA,oBACQlB,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,QACTmB,IADS;AAAA,QACHC,OADG;;AAAA,qBAEUpB,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,QAETqB,KAFS;AAAA,QAEFC,QAFE;;AAAA,uBAMAhB,WAAW,CAACU,KAAD,CANX;AAAA;AAAA,QAMTO,KANS;;AAQhB,QAAMC,MAAM,GAAGhB,eAAe,EAA9B;AAEAD,EAAAA,eAAe,CAACkB,YAAD,EAAe;AAC5BC,IAAAA,kBAAkB,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA0B;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACD;AAH2B,GAAf,CAAf;;AAMA,QAAMG,MAAM,GAAG,MAAM;AACnBR,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAS,IAAAA,YAAY,CAACC,KAAb;AACAR,IAAAA,MAAM,CAACS,UAAP;AACD,GAJD;;AAMC,MAAGZ,KAAK,KAAK,IAAb,EAAkB;AACjB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,QAAQ,EAAGF,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASA,GAVD,MAUK;AACJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,EAKE;AAAQ,MAAA,OAAO,EAAEU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAFF,EAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIoB,MAAD,IACC,oBAAC,OAAD;AACE,MAAA,IAAI,EAAEf,IAAI,KAAK,SADjB;AAC4B,MAAA,MAAM,EAAEe,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVF,EAiBE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACImB,MAAD,IACC,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEf,IAAI,KAAK,OADjB;AAC0B,MAAA,MAAM,EAAEe,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjBF,EAuBE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEtB,QADZ;AAEE,MAAA,cAAc,EAAE,CAAC;AAACuB,QAAAA,KAAK,EAAEpB;AAAR,OAAD,EAAoB;AAACoB,QAAAA,KAAK,EAAErB;AAAR,OAApB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIsB,OAAD,IACC,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEjB,IAAI,KAAI,KAAvB;AAA8B,MAAA,OAAO,EAAEiB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAvBF,EA8BE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEvB,aADZ;AAEE,MAAA,cAAc,EAAE,CAAC;AAACsB,QAAAA,KAAK,EAAEpB;AAAR,OAAD,EAAoB;AAACoB,QAAAA,KAAK,EAAErB;AAAR,OAApB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIuB,OAAD,IACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAElB,IAAI,KAAI,KAA5B;AAAmC,MAAA,OAAO,EAAEkB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJL,CA9BF,CADF;AAuCA;AAEH,CA1ED;;AA4EA,eAAenB,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport SetBirthyear from './components/SetBirthyear'\nimport { gql } from 'apollo-boost'\nimport { useMutation, useSubscription ,useApolloClient } from '@apollo/react-hooks'\nimport { Query, Mutation } from 'react-apollo'\nimport LoginForm from './components/LoginForm'\n\n\n\n\nconst NEW_BOOK = gql`\n  mutation newBook($title: String!, $author: String!, $published: Int!, $genres: [String!]){\n     addBook(\n      title: $title,\n      author: $author,\n      published: $published,\n      genres: $genres\n      ){\n        title\n        published\n        genres\n      }\n}`\n\n\nconst NEW_BIRTHYEAR = gql `\n\n  mutation setBirthyear($name: String!, $birthyear: Int!){\n      editAuthor(\n        name: $name,\n        setBornTo: $birthyear\n      ){\n        name\n        born\n      }\n  }`\n\nconst ALL_AUTHORS = gql`\n{\n  allAuthors {\n    name,\n    born,\n    id\n  }\n}\n`\n\nconst ALL_BOOKS = gql`\n{\n  allBooks {\n    title,\n    published,\n    genres,\n    author{\n      id,\n      name\n    }\n  }\n}\n`\n\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`\n\nconst BOOK_ADDED = gql`\n  subscription {\n    bookAdded {\n      title\n    }\n  }\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const [token, setToken] = useState(null)\n\n \n\n  const [login] = useMutation(LOGIN)\n\n  const client = useApolloClient()\n\n  useSubscription(PERSON_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      console.log(subscriptionData)\n    }\n  })\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n   if(token === null){\n    return (\n      <div>\n        <h2>Login</h2>\n        <LoginForm\n          login={login}\n          setToken={(token) => setToken(token)}\n        />\n      </div>\n    )\n   }else{\n    return (\n      <div>\n      \n        <div>\n          <button onClick={() => setPage('authors')}>authors</button>\n          <button onClick={() => setPage('books')}>books</button>\n          <button onClick={() => setPage('add')}>add book</button>\n          <button onClick={() => setPage('set')}>set birthyear</button>\n          <button onClick={logout}>logout</button>\n        </div>\n  \n        <Query query={ALL_AUTHORS}>\n          {(result) => \n            <Authors\n              show={page === 'authors'} result={result} \n            />}\n        </Query>\n  \n        <Query query={ALL_BOOKS}>\n          {(result) => \n            <Books\n              show={page === 'books'} result={result}\n            />}\n        </Query>\n        <Mutation \n          mutation={NEW_BOOK}\n          refetchQueries={[{query: ALL_BOOKS},{query: ALL_AUTHORS}]}>\n          {(addBook) => \n            <NewBook show={page ==='add'} addBook={addBook} />\n          }\n        </Mutation>\n        <Mutation \n          mutation={NEW_BIRTHYEAR}\n          refetchQueries={[{query: ALL_BOOKS},{query: ALL_AUTHORS}]}>\n          {(setYear) => \n             <SetBirthyear show={page ==='set'} setYear={setYear}/> }      \n        </Mutation>\n      </div>\n    )\n   }\n   \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}